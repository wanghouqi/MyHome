<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<!-- 指定数据源文件 -->
	<context:property-placeholder location="classpath:jdbc_mariaDB.properties" />
	<!-- 定义数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
	</bean>


	<!-- 定义事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 指定事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 需要事务管理的类的设定 -->
	<aop:config>
		<!-- -->
		<aop:pointcut id="transactionPointcut" expression="(execution (* hq.myhome.controller.*.*(..))) or (execution (* hq.mydb.dao.*.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
	</aop:config>
	<!-- 定义事务管理规则(建议Advice) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 以get或query开头的方法不需要事务管理 -->
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="validate*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*Modify" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*List" read-only="true" propagation="SUPPORTS" />
			<!-- 所有方法都要进行事务管理 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- DAO -->
	<!-- Base DAO -->
	<bean id="baseDAO" class="hq.mydb.dao.BaseDAO">
		<property name="dataSource" ref="dataSource" />
		<!-- 指定当前数据库的类型: mySQL, sqlServer, oracle, mariaDB -->
		<property name="databaseType" value="mariaDB" />
		<!-- 所有的表必须有一个唯一的主键,这里指定主键的栏位名,主键为nvchar(32) UUID -->
		<property name="primaryKeyColumnName" value="CN_ID" />
		<!-- 是否显示SQL -->
		<property name="showSQL" value="true" />
	</bean>
</beans>